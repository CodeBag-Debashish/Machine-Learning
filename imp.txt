img_prep = ImagePreprocessing()
img_prep.add_featurewise_zero_center()
img_prep.add_featurewise_stdnorm()


# Create extra synthetic training data by flipping & rotating images
img_aug = ImageAugmentation()
img_aug.add_random_flip_leftright()
img_aug.add_random_rotation(max_angle=25.)




Visualization Part : Use tnsorboard or other python code to visualize the convulated layer outputs


http://fastml.com/yesterday-a-kaggler-today-a-kaggle-master-a-wrap-up-of-the-cats-and-dogs-competition/

http://fastml.com/classifying-images-with-a-pre-trained-deep-network/

overfeat:

https://cilvr.nyu.edu/doku.php?id=software:overfeat:start


conv-net explnation:

https://ujjwalkarn.me/2016/08/11/intuitive-explanation-convnets/

===================================================================

very imp:

https://ujjwalkarn.me/2016/08/11/intuitive-explanation-convnets/

http://www.subsubroutine.com/sub-subroutine/2016/9/30/cats-and-dogs-and-convolutional-neural-networks

===================================================================


===================================================================
fastML:
http://fastml.com/yesterday-a-kaggler-today-a-kaggle-master-a-wrap-up-of-the-cats-and-dogs-competition/
===================================================================


alexnet:
http://vision.stanford.edu/teaching/cs231b_spring1415/slides/alexnet_tugce_kyunghee.pdf
http://vision.stanford.edu/teaching/cs231b_spring1415/slides/alexnet_tugce_kyunghee.pdf



strides:
https://www.tensorflow.org/api_docs/python/tf/nn/conv2d


strides:
https://www.reddit.com/r/MLQuestions/comments/4xhk9h/what_is_nhwc_format_in_tensorflow/


Alexnet:

http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture9.pdf



all in one:
http://cv-tricks.com/cnn/understand-resnet-alexnet-vgg-inception/


paper: Hinton

https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf



https://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Szegedy_Going_Deeper_With_2015_CVPR_paper.pdf




OMG :
https://www.reddit.com/r/MachineLearning/comments/2lmo0l/ama_geoffrey_hinton/

https://research.googleblog.com/2015/12/how-to-classify-images-with-tensorflow.html

http://jefkine.com/general/2016/09/05/backpropagation-in-convolutional-neural-networks/



backprop in conv:
http://jefkine.com/general/2016/09/05/backpropagation-in-convolutional-neural-networks/
https://grzegorzgwardys.wordpress.com/2016/04/22/8/
http://www.cs.toronto.edu/~rgrosse/csc321/lec11.pdf
http://www.inf.ed.ac.uk/teaching/courses/mlp/2015/mlp08-cnn2.pdf



pre-trained:

https://github.com/tflearn/tflearn/issues/267
https://github.com/tflearn/tflearn/blob/master/examples/images/vgg_network_finetuning.py




finetune alexnet:

https://kratzert.github.io/2017/02/24/finetuning-alexnet-with-tensorflow.html





https://flyyufelix.github.io/2016/10/03/fine-tuning-in-keras-part1.html




alexnet finetune:

https://github.com/tflearn/tflearn/issues/723




inception:
https://kwotsin.github.io/tech/2017/02/11/transfer-learning.html

https://github.com/tflearn/tflearn/issues/323


https://insight.io/github.com/tflearn/tflearn/blob/master/examples/images/alexnet.py



https://github.com/machrisaa/tensorflow-vgg/issues/7

https://kratzert.github.io/2017/02/24/finetuning-alexnet-with-tensorflow.html